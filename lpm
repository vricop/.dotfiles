#!/bin/sh

help() {
  echo ""
  echo "lpm: (l)ocal (p)ackage (m)anager" 
  echo "lpm <command>"
  echo ""
  echo "Usage:"
  echo ""
  echo "  lpm help|h                             Display command usage"
  echo "  lpm install|i <package-name> <version> Install specified package"
  echo "  lpm pack                               Create package (don't forget to build your library first)"
  echo "  lpm list|ls                            List available packages in \$LOCAL_LIBS"
  echo "  lpm remove|rm|uninstall <package-name> Remove/uninstall a package"
  echo ""
  echo "All commands:"
  echo ""
  echo "  help|h, install|i, list|ls, pack, remove|uninstall|rm"
  echo ""
  echo "Examples:"
  echo ""
  echo "  lpm i react-components 2.2.15"
  echo "  lpm install frontend-common 1.0.0"
  echo "  lpm remove react-components"
  echo "  lpm rm frontend-common"
  echo "  lpm pack"
  echo ""
  echo "Set \$LOCAL_LIBS env variable in your .zshrc or .bashrc with a path where you'll store all your local libraries."
}

list() { ls $LOCAL_LIBS ;}

install() {
  if [ -n "$1" ] && [ -n "$2" ]; then
    local PACKAGE="${LOCAL_LIBS}/cochescom-${1}-${2}.tgz"
    echo "Installing ${PACKAGE}"
    npm i -f --no-save $PACKAGE
  else
    echo ""
    echo "You have to pass a <package-name> & <version> number, in that order. Read help 'lpm help' to see some examples."
    echo ""
    help
  fi
}

remove() {
  if  [ -n "$1" ]; then
    local PACKAGE="@cochescom/${1}"
    echo ""
    echo "Removing ${PACKAGE}"
    npm rm -f --no-save $PACKAGE
  else
   echo ""
   echo "You need to pass a <package-name>. Read help 'lpm help' to see some examples."
   help
  fi
}

case $1 in
  ls|list) list;;
  pack) npm pack --pack-destination=$LOCAL_LIBS;;
  i|install) install "$2" "$3";;
  h|help) help;;
  rm|remove|uninstall) remove "$2";;
  *) help;;
esac
